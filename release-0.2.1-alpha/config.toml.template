# Configz Global Configuration Template
# Copy this file to ~/.config/configz/config.toml and customize as needed

[settings]
# Default behavior settings
auto_backup = true          # Automatically create backups before operations
backup_count = 5            # Maximum number of backups to keep per module
verbose = false             # Enable verbose output by default
use_colors = true           # Use colored output in terminal
confirm_actions = true      # Ask for confirmation before destructive operations
parallel_operations = false # Enable parallel processing (future feature)

[paths]
# Path settings (relative to ~/.config/configz/ unless absolute)
modules_dir = "modules"     # Directory containing configuration modules
backups_dir = "backups"     # Directory for storing backups
cache_dir = "cache"         # Directory for cache and temporary files
logs_dir = "logs"           # Directory for log files (future feature)

[backup]
# Backup configuration
strategy = "timestamp"      # Backup naming strategy: "timestamp", "incremental", "versioned"
compression = false         # Compress backup files (future feature)
retention_days = 30         # Auto-cleanup backups older than this (future feature)
exclude_patterns = [        # File patterns to exclude from backups
    "*.log",
    "*.tmp",
    ".DS_Store",
    "node_modules"
]

[install]
# Installation behavior
default_method = "copy"     # Default installation method: "copy", "symlink"
preserve_permissions = true # Preserve file permissions during installation
create_missing_dirs = true  # Create missing target directories
overwrite_existing = false  # Overwrite existing files without confirmation
follow_symlinks = true      # Follow symbolic links during operations

[sources]
# External module sources (future feature)
github_repos = []           # List of GitHub repositories to fetch modules from
# Example: ["username/dotfiles", "organization/configs"]
custom_urls = []            # List of custom URLs for module sources
# Example: ["https://example.com/configs.git"]
local_paths = []            # Additional local paths to scan for modules
# Example: ["/opt/shared-configs", "~/development/dotfiles"]

[registry]
# Module registry settings
auto_update = true          # Automatically update registry on operations
track_dependencies = true   # Track and validate module dependencies
check_conflicts = true      # Check for conflicting files between modules
verify_checksums = false    # Verify file checksums (future feature)

[hooks]
# Command hooks (future feature - shell commands to run at specific times)
pre_install = []            # Commands to run before any installation
post_install = []           # Commands to run after successful installation
pre_remove = []             # Commands to run before removing modules
post_remove = []            # Commands to run after removing modules
# Example: ["echo 'Starting installation'", "notify-send 'Configz' 'Installation complete'"]

[ui]
# User interface settings
show_progress = true        # Show progress bars for long operations
use_icons = true           # Use emoji icons in output
table_style = "grid"       # Table display style: "grid", "simple", "minimal"
date_format = "%Y-%m-%d %H:%M:%S"  # Date format for timestamps
max_description_length = 50 # Maximum length for descriptions in lists

[logging]
# Logging configuration (future feature)
level = "info"             # Log level: "debug", "info", "warning", "error"
file_logging = false       # Enable logging to files
max_log_size = "10MB"      # Maximum size per log file
log_rotation = true        # Enable log file rotation

[security]
# Security settings (future feature)
verify_signatures = false  # Verify module signatures
trusted_sources = []       # List of trusted module sources
sandbox_mode = false       # Run installations in sandbox mode
check_permissions = true   # Check file permissions before operations

[performance]
# Performance optimization settings
cache_metadata = true      # Cache module metadata for faster operations
lazy_loading = true        # Load module information only when needed
parallel_limit = 4         # Maximum number of parallel operations
timeout_seconds = 30       # Timeout for external operations

[compatibility]
# Compatibility settings
check_system_deps = true   # Check system dependencies before installation
warn_on_conflicts = true   # Warn about potential file conflicts
strict_mode = false        # Enable strict validation mode
legacy_support = true      # Support legacy module formats

# Module-specific overrides
# Override settings for specific modules
[modules.fish]
install_method = "copy"
backup_enabled = true
post_install = ["fish -c 'source ~/.config/fish/config.fish'"]

[modules.nvim]
install_method = "symlink"
dependencies = ["neovim", "git"]
backup_enabled = true

[modules.starship]
install_method = "copy"
post_install = ["echo 'Add eval \"$(starship init bash)\" to your shell config'"]

# Environment-specific configurations
[environments.development]
verbose = true
confirm_actions = false
auto_backup = true

[environments.production]
verbose = false
confirm_actions = true
auto_backup = true
strict_mode = true
